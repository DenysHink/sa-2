version: '3.8'

services:
  # Aplicação Node.js
  app:
    build: .
    container_name: bus-system-api
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_NAME=bus_system
      - DB_USER=root
      - DB_PASSWORD=bus_system_password
      - JWT_SECRET=super_secret_jwt_key_for_production_change_this
      - JWT_EXPIRES_IN=24h
      - ADMIN_KEY=admin_key_change_this_in_production
    depends_on:
      mysql:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - bus-system-network

  # Banco de dados MySQL
  mysql:
    image: mysql:8.0
    container_name: bus-system-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=bus_system_password
      - MYSQL_DATABASE=bus_system
      - MYSQL_USER=app_user
      - MYSQL_PASSWORD=app_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - bus-system-network

  # Adminer para gerenciamento do banco (opcional)
  adminer:
    image: adminer
    container_name: bus-system-adminer
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - bus-system-network

volumes:
  mysql_data:
    driver: local

networks:
  bus-system-network:
    driver: bridge

